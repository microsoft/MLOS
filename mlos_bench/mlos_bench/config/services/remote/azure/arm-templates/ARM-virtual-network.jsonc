{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "MLOS Autotune virtual network name"
      }
    },
    "vnetAddressPrefix": {
      "type": "string",
      "metadata": {
        "description": "MLOS Autotune virtual network address prefix"
      },
      "defaultValue": "10.0.0.0/16"
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Default subnet name"
      },
      "defaultValue": "default"
    },
    "subnetPrefix": {
      "type": "string",
      "metadata": {
        "description": "Default subnet prefix"
      },
      "defaultValue": "10.0.0.0/24"
    },
    "networkSecurityGroupName": {
      "type": "string",
      "metadata": {
        "description": "Default network security group name"
      },
      "defaultValue": "[concat(parameters('vnetName'), '-', parameters('subnetName'), '-nsg')]"
    },
    "destinationPortRanges": {
      "type": "array",
      "metadata": {
        "description": "Destination port ranges to allow access to from the sourceAddressPrefixes"
      },
      "defaultValue": [
        "22",
        "3389"
      ]
    },
    "sourceAddressPrefixes": {
      "type": "array",
      "metadata": {
        "description": "Source address prefixes to allow access to the destinationPortRanges"
      },
      "defaultValue": [
        // Note: this will need to change to some list of public addresses for it to be useful.
        "192.168.42.0/24"
      ]
    }
  },
  "resources": [
    {
      "comments": "Default Network Security Group for template.  Experiments can still define their own.",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rules",
            "properties": {
              "priority": 200,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRanges": "[parameters('destinationPortRanges')]",
              "protocol": "Tcp",
              "sourceAddressPrefixes": "[parameters('sourceAddressPrefixes')]",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-09-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]",
              "serviceEndpoints": [
                {
                  // May need to deploy containers from ACR.
                  "service": "Microsoft.ContainerRegistry"
                },
                {
                  // Typically need a service endpoint for storage accounts for the VMs in this VNet.
                  "service": "Microsoft.Storage"
                }
              ],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    }
  ]
}
