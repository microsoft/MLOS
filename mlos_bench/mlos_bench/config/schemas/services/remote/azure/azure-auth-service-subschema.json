{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/microsoft/MLOS/main/mlos_bench/mlos_bench/config/schemas/services/remote/azure/azure-auth-service-subschema.json",
    "title": "mlos_bench Azure FileShare Service config",
    "description": "config for an mlos_bench Azure Authentication Service",
    "type": "object",
    "properties": {
        "class": {
            "enum": [
                "mlos_bench.services.remote.azure.AzureAuthService",
                "mlos_bench.services.remote.azure.azure_auth.AzureAuthService"
            ]
        },
        "config": {
            "type": "object",
            "allOf": [
                {
                    "$ref": "../../common-defs-subschemas.json#/$defs/poll_configs"
                },
                {
                    "type": "object",
                    "properties": {
                        "tokenRequestInterval": {
                            "description": "Time before token expiration to request a new token",
                            "type": "number"
                        },
                        "spClientId": {
                            "description": "Client ID of the Service Principal to authenticate as",
                            "type": "string"
                        },
                        "keyVaultName": {
                            "description": "Name of key vault to retrieve the certificate from, for authorizing the Service Principal",
                            "type": "string"
                        },
                        "certName": {
                            "description": "Name of the Service Principal's certificate in the key vault",
                            "type": "string"
                        },
                        "tenant": {
                            "description": "Tenant ID of the Service Principal",
                            "type": "string"
                        }
                    }
                }
            ],
            "dependentSchemas": {
                "spClientId": {
                    "required": [
                        "keyVaultName",
                        "certName",
                        "tenant"
                    ]
                }
            },
            "unevaluatedProperties": false
        }
    },
    "required": ["class"]
}
