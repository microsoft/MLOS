[
    // Local: Generate new Redis config and upload it to a shared storage
    {
        "name": "Generate Redis configuration",
        "class": "mlos_bench.environments.local.LocalFileShareEnv",

        "include_tunables": ["environments/apps/redis/redis-tunables.jsonc"],
        "config": {
            "tunable_params": ["redis"],

            "required_args": ["experimentId", "trialId"],

            // Dump tunable parameters to a local JSON file:
            "dump_params_file": "redis-params.json",

            "setup": [
                "environment/apps/redis/local/scripts/generate_redis_config.py redis-params.json redis.cfg"
            ],

            // TODO: improve handling of relative paths
            "upload": [
                {"from": "redis.cfg", "to": "$experimentId/$trialId/input/redis.cfg"},
                {"from": "remote/scripts/", "to": "$experimentId/$trialId/scripts"}
            ]
        }
    },

    // Remote: Start Redis with the new config and run the benchmarks
    {
        "name": "Benchmark Redis on Linux",
        "class": "mlos_bench.environments.remote.RemoteEnv",

        "include_tunables": ["environments/apps/redis/redis-tunables.jsonc"],
        "config": {
            "tunable_params": ["redis"],

            "required_args": ["experimentId", "trialId", "mountPoint"],

            "const_args": {
                "mountPoint": "/mnt/osat_fs"
            },

            "setup": [
                "$mountPoint/$experimentId/$trialId/scripts/setup-workload.sh",
                "$mountPoint/$experimentId/$trialId/scripts/setup-app.sh"
            ],

            "run": [
                "$mountPoint/$experimentId/$trialId/scripts/run-workload.sh",
                "mkdir -p $mountPoint/$experimentId/$trialId/output/",
                "cp -r /tmp/mlos_bench/output/* $mountPoint/$experimentId/$trialId/output/"
            ],

            "teardown": [
                "$mountPoint/$experimentId/$trialId/scripts/cleanup-workload.sh",
                "$mountPoint/$experimentId/$trialId/scripts/cleanup-app.sh"
            ]
        }
    },

    // Local: Download Redis benchmark data from the shared storage and process it
    {
        "name": "Download and post-process Redis benchmark data",
        "class": "mlos_bench.environments.local.LocalFileShareEnv",

        "include_tunables": ["environments/apps/redis/redis-tunables.jsonc"],
        "config": {
            "tunable_params": ["redis"],

            "required_args": ["experimentId", "trialId"],

            "download": [
                {
                    "from": "$experimentId/$trialId/output",
                    "to": "$PWD/redis-bench-output/"
                }
            ],

            "run": [
                "environments/apps/redis/local/scripts/process_redis_results.py redis-bench-output/results.csv redis-benchmark.csv"
            ],

            // Read benchmark results from a local CSV file:
            "read_results_file": "redis-benchmark.csv"
        }
    }
]
