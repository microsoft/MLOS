syntax = "proto3";

package mlos.optimizer_service;

import public "mlos/Grpc/OptimizerShared.proto";

// Exposes Bayesian Optimizer's functionality over gRPC.
//
service OptimizerService
{
    // Creates an optimizer with the specified configuration.
    //
    rpc CreateOptimizer(CreateOptimizerRequest) returns (OptimizerHandle);

    // Returns information about optimizers configuration and optimization problem.
    //
    rpc GetOptimizerInfo(OptimizerHandle) returns (OptimizerInfo);
    
    // Request a suggestion.
    //
    rpc Suggest(SuggestRequest) returns (ConfigurationParameters);

    // Adds an observation to the optimizer's data set.
    //
    rpc RegisterObservation(RegisterObservationRequest) returns (Empty);

    // Adds observations to the optimizer's data set.
    //
    rpc RegisterObservations(RegisterObservationsRequest) returns (Empty);

    // Like ping.
    //
    rpc Echo(Empty) returns (Empty);
};

// A request to create an optimizer.
//
message CreateOptimizerRequest
{
    OptimizationProblem OptimizationProblem = 1;
    string OptimizerConfigName = 2;
    string OptimizerConfig = 3;
};


// A request to create a suggestion given specified context.
//
message SuggestRequest
{
    OptimizerHandle OptimizerHandle = 1;
    bool Random = 2;
    Context Context = 3;
};


