// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/anaconda
// vim: set ft=jsonc:
{
    "name": "Miniconda (Python 3)",
    // Use a docker compose file so we can automatically setup an nginx server to test viewing the docs.
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
    // Prep some host side things for the container build
    "initializeCommand": [
        ".devcontainer/scripts/prep-container-build"
    ],
    // Make sure the container user can read/write to the package caches.
    "onCreateCommand": "sudo -n mkdir -p /opt/conda/pkgs/cache /var/cache/pip && sudo -n chown -R vscode /opt/conda/pkgs/cache /var/cache/pip",
    // Make sure the conda env is up to date with the source tree expectations.
    "postCreateCommand": "/opt/conda/bin/conda env update --solver=libmamba -v -n mlos -f ${containerWorkspaceFolder}/conda-envs/mlos.yml",
    // Various mounting, run, post-create, and user settings
    "containerEnv": {
        "LOCAL_USER_NAME": "${localEnv:USER}${localEnv:USERNAME}",
        "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
        "CONTAINER_WORKSPACE_FOLDER": "${containerWorkspaceFolder}",
        "SSH_AUTH_SOCK": "${localEnv:SSH_AUTH_SOCK}",
        "PIP_CACHE_DIR": "/var/cache/pip",
        // Support local proxy caches for rebuilding the container more quickly.
        "http_proxy": "${localEnv:http_proxy}",
        "https_proxy": "${localEnv:https_proxy}",
        "no_proxy": "${localEnv:no_proxy}"
    },
    // Features to add to the dev container. More info: https://containers.dev/features.
    "features": {
        "ghcr.io/devcontainers/features/azure-cli:1": {},
        //"ghcr.io/devcontainers/features/conda:1": {},
        "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
        "ghcr.io/devcontainers/features/github-cli:1": {},
        "ghcr.io/stuartleeks/dev-container-features/azure-cli-persistence:0": {},
        "ghcr.io/stuartleeks/dev-container-features/shell-history:0": {}
    },
    // Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "python --version",
    // Configure tool-specific properties.
    "customizations": {
        "vscode": {
            "settings": {
                // Adjust the python interpreter path to point to the conda environment
                "python.defaultInterpreterPath": "/opt/conda/envs/mlos/bin/python",
                "python.testing.pytestPath": "/opt/conda/envs/mlos/bin/pytest",
                "python.formatting.autopep8Path": "/opt/conda/envs/mlos/bin/autopep8",
                "python.linting.pylintPath": "/opt/conda/envs/mlos/bin/pylint",
                "pylint.path": [
                    "/opt/conda/envs/mlos/bin/pylint"
                ],
                "python.linting.flake8Path": "/opt/conda/envs/mlos/bin/flake8",
                "python.linting.mypyPath": "/opt/conda/envs/mlos/bin/mypy",
                "mypy.dmypyExecutable": "/opt/conda/envs/mlos/bin/dmypy",
                "mypy.runUsingActiveInterpreter": false
            },
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
                "davidanson.vscode-markdownlint",
                "donjayamanne.python-environment-manager",
                "eamodio.gitlens",
                "editorconfig.editorconfig",
                "remcohaszing.schemastore",
                "github.copilot",
                "github.vscode-github-actions",
                "github.vscode-pull-request-github",
                "gruntfuggly.todo-tree",
                "huntertran.auto-markdown-toc",
                "ibm.output-colorizer",
                "lextudio.restructuredtext",
                "matangover.mypy",
                "ms-azuretools.vscode-docker",
                "ms-python.autopep8",
                "ms-python.flake8",
                "ms-python.pylint",
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-vsliveshare.vsliveshare",
                "njpwerner.autodocstring",
                "redhat.vscode-yaml",
                "stkb.rewrap",
                "streetsidesoftware.code-spell-checker",
                "trond-snekvik.simple-rst",
                "tyriar.sort-lines"
            ]
        }
    }
    // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    // "remoteUser": "root"
}
