# vim: set ft=dosini:
[bdist_wheel]
universal = 1

[pycodestyle]
count = True
# W503: Line break occurred before a binary operator
# W504: Line break occurred after a binary operator
ignore = W503,W504
format = pylint
# See Also: .editorconfig, .pylintrc
max-line-length = 132
show-source = True
statistics = True

[pydocstyle]
# D102: Missing docstring in public method (Avoids inheritence bug. Force checked in .pylintrc instead.)
# D105: Missing docstring in magic method
# D107: Missing docstring in __init__
# D200: One-line docstring should fit on one line with quotes
# D401: First line should be in imperative mood
# We have many docstrings that are too long to fit on one line, so we ignore both of these two rules:
# D205: 1 blank line required between summary line and description
# D400: First line should end with a period
add_ignore = D102,D105,D107,D200,D401,D205,D400
match = .+(?<!_test)\.py
convention = numpy

[flake8]
max-line-length = 132

[tool:pytest]
minversion = 7.1
#pythonpath = .
# Run all tests to completion on multiple processes.
# Run failed and new tests first by default.
addopts =
    -vv
    -svl --ff --nf
    -n auto
#   --log-level=DEBUG
# Moved these to Makefile (coverage is expensive and we only need it in the pipelines generally).
#--cov=mlos_core --cov-report=xml
testpaths = mlos_core mlos_bench
# Ignore some upstream deprecation warnings.
filterwarnings =
    ignore:.*(get_hyperparam|get_dictionary).*:DeprecationWarning:smac:0
    ignore:.*(Please leave at default or explicitly set .size=None).*:DeprecationWarning:smac:0
    ignore:.*(Trying to register a configuration that was not previously suggested).*:UserWarning:.*llamatune.*:0
    ignore:.*(DISPLAY environment variable is set).*:UserWarning:.*conftest.*:0

#
# mypy static type checker configs
#

[mypy]
#ignore_missing_imports = True
warn_unused_configs = True
warn_unused_ignores = True
warn_unreachable = True
warn_return_any = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
strict = True
allow_any_generics = True
hide_error_codes = False
# regex of files to skip type checking
# _version.py and setup.py look like duplicates when run from the root of the repo even though they're part of different packages.
# There's not much in them so we just skip them.
# We also skip several vendor files that currently throw errors.
exclude = (mlos_(core|bench)/(_version|setup).py)|(doc/)|(/build/)|(-packages/_pytest/)

# https://github.com/automl/ConfigSpace/issues/293
[mypy-ConfigSpace.*]
ignore_missing_imports = True

# https://github.com/dpranke/pyjson5/issues/65
[mypy-json5]
ignore_missing_imports = True

# https://github.com/matplotlib/matplotlib/issues/25634
[mypy-matplotlib.*]
ignore_missing_imports = True

# https://github.com/pytest-dev/pytest/issues/10435
[mypy-pytest]
ignore_missing_imports = True

# https://github.com/scikit-learn/scikit-learn/issues/16705
[mypy-sklearn.*]
ignore_missing_imports = True

# https://github.com/scipy/scipy/issues/17158
[mypy-scipy.*]
ignore_missing_imports = True

# https://github.com/pypa/setuptools_scm/issues/501
[mypy-setuptools_scm.*]
ignore_missing_imports = True

# https://github.com/microsoft/FLAML/issues/907
[mypy-flaml.*]
ignore_missing_imports = True
